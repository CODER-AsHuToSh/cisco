/*
 * Generated by genxface.pl - DO NOT EDIT OR COMMIT TO SOURCE CODE CONTROL!
 */
#ifdef __cplusplus
extern "C" {
#endif


/**
 * This variant is for the resolver. When devprefs no longer contain CIDRs, remove LOADFLAGS_FP_ALLOW_OTHER_TYPES.
 */
void devprefs_register(module_conf_t *m, const char *name, const char *fn, bool loadable) ;

/**
 * This variant is for Hard Cider, until they no longer need to access CIDR lists in devprefs.
 */
void devprefs_register_just_cidr(module_conf_t *m, const char *name, const char *fn, bool loadable) ;
const struct devprefs * devprefs_conf_get(const struct confset *set, module_conf_t m) ;
bool devprefs_get(pref_t *pref, const struct devprefs *me, const char *name, struct kit_deviceid *device_id, struct xray *x) ;

/* XXX: This should go when HardCIDR stops needing it */
bool devprefs_get_policy(const struct devprefs *me, pref_t *pref, actype_t actype, uint32_t orgid, uint32_t id) ;
const struct preforg * devprefs_org(const struct devprefs *me, uint32_t id) ;
struct devprefs * devprefs_new(struct conf_loader *cl, unsigned loadflags) ;
void devprefs_refcount_inc(struct devprefs *me) ;
void devprefs_refcount_dec(struct devprefs *me) ;
const struct prefblock * devprefs_get_prefblock(const struct devprefs *me, uint32_t orgid) ;

#ifdef __cplusplus
}
#endif
