/*
 * Generated by genxface.pl - DO NOT EDIT OR COMMIT TO SOURCE CODE CONTROL!
 */
#ifdef __cplusplus
extern "C" {
#endif

void domainlist_get_real_type_internals(struct conf_type *copy) ;
void domainlist_set_type_internals(const struct conf_type *replacement) ;
void domainlist_register(module_conf_t *m, const char *name, const char *fn, bool loadable) ;
void domainlist_register_exact(module_conf_t *m, const char *name, const char *fn, bool loadable) ;

/* COVERAGE EXCLUSION: Was covered by opendnscache tests */
const struct domainlist * domainlist_conf_get(const struct confset *set, module_conf_t m) ;
void mem_reverse(void *s, size_t n) ;

/*
 * domainlist_new_from_buffer() is called to parse a domainlist
 * separated by a space char, e.g.: * "foo.com bar.com"
 */
struct domainlist * domainlist_new_from_buffer(const char *buf, int len, struct object_fingerprint *of, uint32_t loadflags) ;
void domainlist_refcount_inc(struct domainlist *me) ;
void domainlist_refcount_dec(struct domainlist *me) ;
struct domainlist * domainlist_new(struct conf_loader *cl, unsigned maxlines, uint32_t loadflags) ;
const char * domainlist_sscan(const char *str, const char *delim, uint32_t loadflags, struct domainlist **dl) ;
const uint8_t * domainlist_match(const struct domainlist *dl, const uint8_t *name, enum domainlist_match matchtype, struct xray *x, const char *listname) ;
size_t domainlist_buf_size(const struct domainlist *me) ;
char * domainlist_to_buf(const struct domainlist *me, char *buf, size_t sz, size_t *len_out) ;
ssize_t domainlist_to_sorted_ascii(const struct domainlist *me, char *buf, size_t sz) ;

#ifdef __cplusplus
}
#endif
